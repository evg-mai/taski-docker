#test
name: Main Taski Workflow

#triggers
on: [push]
#  push:
#    branches:
#      -main

#tasks
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_user
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 1s --health-retries 5

    steps:
      #get source code
      - name: Check out repo code
        uses: actions/checkout@v4
      #runs "tree"
      - name: Print project tree
        run: tree .
      #install python
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      #install pip, ruff
      - name: Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.8.0
          pip install -r ./backend/requirements.txt
      #check by ruff
      - name: Lint by ruff
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_user
          POSTGRES_DB: django_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          python -m ruff check backend/
          cd backend/
          python manage.py migrate
          python manage.py test

  builds_and_dockerhub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    #start docker
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    #authorization
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCUSER }}
        password: ${{ secrets.DCAT }}
    #push
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./backend/
        push: true
        tags: ${{ vars.DOCUSER }}/taski_backend:latest
